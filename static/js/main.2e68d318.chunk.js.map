{"version":3,"sources":["components/AddTask.js","components/SingleTask.js","components/TaskList.js","components/ProgressBar.js","components/App.js","serviceWorker.js","index.js"],"names":["AddTask","date","Date","state","text","category","startDate","toISOString","slice","priority","handleChangeValue","event","setState","target","value","handleChangeDate","handleChooseCategory","handleSelectPriority","className","this","toLocaleDateString","match","toLocaleString","month","getFullYear","weekday","onClick","name","id","onChange","type","min","required","placeholder","length","props","handleAddTask","alert","Component","SingleTask","finishDate","task","style","active","width","flexBasis","delete","finished","backgroundColor","priorityStyle","checkPriority","TaskList","tasks","filter","sort","a","b","toLowerCase","activeTasks","map","key","finishedTasks","paddingTop","marginTop","ProgressBar","nrOnePriority","nrTwoPriority","nrThreePriority","forEach","totalCountOfPriority","display","App","handleDelete","handleFinished","getTime","counterTasks","newTasks","concat","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e68d318.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AddTask.sass\";\r\nclass AddTask extends Component {\r\n  date = new Date();\r\n  state = {\r\n    text: \"\",\r\n    category: \"\",\r\n    startDate: this.date.toISOString().slice(0, 10),\r\n    priority: 1\r\n  };\r\n  date = new Date();\r\n\r\n  handleChangeValue = event => {\r\n    this.setState({\r\n      text: event.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeDate = event => {\r\n    this.setState({\r\n      startDate: event.target.value\r\n    });\r\n  };\r\n\r\n  handleChooseCategory = event => {\r\n    this.setState({\r\n      category: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSelectPriority = event => {\r\n    this.setState({\r\n      priority: event.target.value * 1\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"main__item addTask\">\r\n        <div className=\"addTask__dataContainer\">\r\n          <p className=\"addTask__dataDay\">\r\n            {this.date.toLocaleDateString().match(/^([^.]+)/g)}\r\n          </p>\r\n          <p className=\"addTask__dataMonth\">\r\n            {this.date.toLocaleString(\"en-us\", { month: \"short\" })}\r\n          </p>\r\n          <p className=\"addTask__dataYear\">{this.date.getFullYear()}</p>\r\n        </div>\r\n        <h2 className=\"addTask__nameofDay\">\r\n          {this.date.toLocaleString(\"en-us\", { weekday: \"long\" })}\r\n        </h2>\r\n        <div className=\"addTask__form form\">\r\n          <div className=\"form__item form__item--category\">\r\n            <p className=\"form__title form__categoryTitle\">Choose category: </p>\r\n            <ul className=\"form__categoryList\">\r\n              <button\r\n                className=\"form__singleCategory\"\r\n                value=\"House\"\r\n                onClick={this.handleChooseCategory}\r\n              >\r\n                House\r\n              </button>\r\n              <button\r\n                className=\"form__singleCategory\"\r\n                value=\"Work\"\r\n                onClick={this.handleChooseCategory}\r\n              >\r\n                Work\r\n              </button>\r\n              <button\r\n                className=\"form__singleCategory\"\r\n                value=\"Study\"\r\n                onClick={this.handleChooseCategory}\r\n              >\r\n                Study\r\n              </button>\r\n              <button\r\n                className=\"form__singleCategory\"\r\n                value=\"Other\"\r\n                onClick={this.handleChooseCategory}\r\n              >\r\n                Other\r\n              </button>\r\n            </ul>\r\n          </div>\r\n          <div className=\"form__item form__item--priority\">\r\n            <p className=\"form__title form__priorityTitle\">\r\n              Choose task priority:{\" \"}\r\n            </p>\r\n            <select\r\n              name=\"priority\"\r\n              id=\"priority\"\r\n              className=\"form__prioritySelect\"\r\n              value={this.state.priority}\r\n              onChange={this.handleSelectPriority}\r\n            >\r\n              <option\r\n                value={1}\r\n                className=\"priority__single priority__single--normal\"\r\n              >\r\n                normal\r\n              </option>\r\n              <option\r\n                value={2}\r\n                className=\"priority__single priority__single--important\"\r\n              >\r\n                important\r\n              </option>\r\n              <option\r\n                value={3}\r\n                className=\"priority__single priority__single--v-important\"\r\n              >\r\n                very important\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form__item form__item--date\">\r\n            <p className=\"form__title form__dateTitle\">Choose Date:</p>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form__date\"\r\n              value={this.state.startDate}\r\n              onChange={this.handleChangeDate}\r\n              min={this.date.toISOString().slice(0, 10)}\r\n              required=\"required\"\r\n            />\r\n          </div>\r\n          <div className=\"form__item form__item--text\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form__textInput\"\r\n              value={this.state.text}\r\n              onChange={this.handleChangeValue}\r\n              placeholder=\"Add new task\"\r\n            />\r\n            <button\r\n              className=\"form__button\"\r\n              onClick={() => {\r\n                const { text, category } = this.state;\r\n                if (text.length > 2 && category !== \"\") {\r\n                  this.props.handleAddTask(\r\n                    this.state.text,\r\n                    this.state.category,\r\n                    this.state.startDate,\r\n                    this.state.priority\r\n                  );\r\n                  this.setState({\r\n                    text: \"\",\r\n                    category: \"\",\r\n                    startDate: this.date.toISOString().slice(0, 10),\r\n                    priority: 1\r\n                  });\r\n                } else if (text.length === 0\r\n                  ) {\r\n                  alert(\"Insert task name\");\r\n                } else if (text.length > 0 && text.length <= 2) {\r\n                  alert(\"Task name have to be longer than two chars\");\r\n                } else if (category === \"\") {\r\n                  alert(\"Choose catgeory\");\r\n                }\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport \"./SingleTask.sass\";\r\n\r\nconst SingleTask = props => {\r\n  const finishDate = new Date(props.task.finishDate).toLocaleString();\r\n\r\n  const checkPriority = () => {\r\n    let priorityStyle = \"\";\r\n    switch (props.task.priority) {\r\n      case 1:\r\n        priorityStyle = \"#CF7370\";\r\n        break;\r\n      case 2:\r\n        priorityStyle = \"#F9F975\";\r\n        break;\r\n      case 3:\r\n        priorityStyle = \"#7DDBB6\";\r\n        break;\r\n      default:\r\n        return \"\";\r\n    }\r\n    return priorityStyle;\r\n  };\r\n\r\n  return (\r\n    <div className=\"list__singleItem singleItem\">\r\n      <h3 className=\"singleItem__name\">\r\n        <span className=\"singleItem__name--bold\">Task name:</span>{\" \"}\r\n        {props.task.name}\r\n      </h3>\r\n      <p className=\"singleItem__category\">\r\n        <span className=\"singleItem__category--bold\">Category: </span>\r\n        {props.task.category}\r\n      </p>\r\n      <p className=\"singleItem__startDate\">\r\n        {props.task.finishDate === null\r\n          ? `Start date: ${props.task.startDate}`\r\n          : `Start date: ${props.task.startDate} Finished: ${finishDate}`}\r\n      </p>\r\n      <div className=\"singleItem__buttons\" style={props.task.active === true ? {width: \"44px\"} : {width: \"22px\"}}>\r\n        <button\r\n          className=\"singleItem__singleButton singleItem__singleButton--delete fas fa-times\"\r\n          style={props.task.active === true ? {flexBasis: \"50%\"} : {flexBasis: \"100%\"}}\r\n          onClick={() => props.delete(props.task.id)}\r\n        ></button>\r\n        {props.task.active === true ? (\r\n          <button\r\n            className=\"singleItem__singleButton singleItem__singleButton--check fas fa-check\"\r\n            style={props.task.active === true ? {flexBasis: \"50%\"} : {flexBasis: \"0%\"}}\r\n            onClick={() => props.finished(props.task.id)}\r\n          ></button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <span\r\n        className=\"singleItem__priority\"\r\n        style={{ backgroundColor: checkPriority() }}\r\n      ></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleTask;\r\n","import React from \"react\";\r\nimport SingleTask from \"./SingleTask.js\";\r\nimport \"./TaskList.sass\";\r\n\r\nconst TaskList = props => {\r\n  const active = props.tasks.filter(task => task.active);\r\n  const finished = props.tasks.filter(task => !task.active);\r\n\r\n  if (finished.length >= 2) {\r\n    finished.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      } else if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n      a = a.name.toLowerCase();\r\n      b = b.name.toLowerCase();\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n  const activeTasks = active.map(task => (\r\n    <SingleTask\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      finished={props.finished}\r\n    />\r\n  ));\r\n\r\n  const finishedTasks = finished.map(task => (\r\n    <SingleTask\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      finished={props.finished}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"main__item taskList\">\r\n      <div className=\"taskList__group taskList__group--started\">\r\n        {active.length !== 0 ? (\r\n          <h2 className=\"taskList__title\">Started tasks</h2>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className=\"taskList__list list\"\r\n          style={\r\n            active.length !== 0 ? { paddingTop: \"10px\" } : { paddingTop: \"0px\" }\r\n          }\r\n        >\r\n          {activeTasks}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"taskList__group taskList__group--finished\"\r\n        style={\r\n          finished.length !== 0 && active.length !== 0\r\n            ? { marginTop: \"20px\" }\r\n            : { marginTop: \"0px\" }\r\n        }\r\n      >\r\n        {finished.length !== 0 ? (\r\n          <h2 className=\"taskList__title\">Finished</h2>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className=\"taskList__list list\"\r\n          style={\r\n            finished.length !== 0\r\n              ? { paddingTop: \"10px\" }\r\n              : { paddingTop: \"0px\" }\r\n          }\r\n        >\r\n          {finishedTasks}\r\n        </div>\r\n      </div>\r\n      {active.length === 0 && finished.length === 0 ? \"No tasks to do \" : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"./ProgressBar.sass\";\r\n\r\nconst ProgressBar = props => {\r\n  const checkActiveTasks = () => {\r\n    const tasks = props.tasks.filter(task => task.active);\r\n    return tasks;\r\n  };\r\n  const active = checkActiveTasks();\r\n  let nrOnePriority = 0;\r\n  let nrTwoPriority = 0;\r\n  let nrThreePriority = 0;\r\n\r\n  active.forEach(task => {\r\n    if (task.priority === 1) nrOnePriority++;\r\n    else if (task.priority === 2) nrTwoPriority++;\r\n    else if (task.priority === 3) nrThreePriority++;\r\n  });\r\n\r\n  const totalCountOfPriority = nrOnePriority + nrTwoPriority + nrThreePriority;\r\n\r\n  return (\r\n    <div className=\"main__item progressBar\" style={active.length !== 0 ? {display: \"block\"} : {display: \"none\"}}>\r\n      <h3 className=\"progressBar__title\">{active.length !== 0 ? \"Number of task by priorities:\" : \"\" }</h3>\r\n      <div\r\n        className=\"progressBar__list\"\r\n        style={active.length !== 0 ? { display: \"flex\" } : {}}\r\n      >\r\n        <div\r\n          className=\"progressBar__item progressBar__item--one\"\r\n          style={{\r\n            flexBasis: (nrOnePriority / totalCountOfPriority) * 100 + \"%\"\r\n          }}\r\n        >\r\n          {nrOnePriority !== 0 ? nrOnePriority : \"\"}\r\n        </div>\r\n        <div\r\n          className=\"progressBar__item progressBar__item--two\"\r\n          style={{\r\n            flexBasis: (nrTwoPriority / totalCountOfPriority) * 100 + \"%\"\r\n          }}\r\n        >\r\n          {nrTwoPriority !== 0 ? nrTwoPriority : \"\"}\r\n        </div>\r\n        <div\r\n          className=\"progressBar__item progressBar__item--three\"\r\n          style={{\r\n            flexBasis: (nrThreePriority / totalCountOfPriority) * 100 + \"%\"\r\n          }}\r\n        >\r\n          {nrThreePriority !== 0 ? nrThreePriority : \"\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.sass\";\nimport AddTask from \"./AddTask.js\";\nimport TaskList from \"./TaskList.js\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.counterTasks = 3;\n    this.state = {\n      tasks: [\n        {\n          id: 0,\n          name: \"Learn React Router\",\n          startDate: \"2019.10.07\",\n          priority: 1,\n          active: true,\n          finishDate: null,\n          category: \"Study\"\n        },\n        {\n          id: 1,\n          name: \"Learn React Hooks\",\n          startDate: \"2019.10.06\",\n          priority: 1,\n          active: true,\n          finishDate: null,\n          category: \"Study\"\n        },\n        {\n          id: 2,\n          name: \"Create SPA using React Router\",\n          startDate: \"2019.10.05\",\n          priority: 3,\n          active: false,\n          finishDate: \"10.10.2019, 17:48:31\",\n          category: \"Study\"\n        }\n      ]\n    };\n  }\n\n  handleDelete = id => {\n    const tasks = [...this.state.tasks].filter(task => task.id !== id);\n    this.setState({\n      tasks: tasks\n    });\n  };\n\n  handleFinished = id => {\n    const tasks = [...this.state.tasks].map(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n      return task;\n    });\n\n    this.setState({\n      tasks: tasks\n    });\n  };\n\n  handleAddTask = (text, category, startDate, priority) => {\n    const task = {\n      id: this.counterTasks,\n      name: text,\n      startDate: startDate,\n      priority: priority,\n      active: true,\n      finishDate: null,\n      category: category\n    };\n    const newTasks = [...this.state.tasks].concat(task);\n\n    this.setState({\n      tasks: newTasks\n    });\n\n    this.counterTasks++;\n  };\n\n  render() {\n    return (\n      <main className=\"main\">\n        <h1 className=\"main__title\">ToDo App </h1>\n        <AddTask tasks={this.state.tasks} handleAddTask={this.handleAddTask} />\n        <ProgressBar tasks={this.state.tasks} />\n        <TaskList\n          tasks={this.state.tasks}\n          delete={this.handleDelete}\n          finished={this.handleFinished}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}